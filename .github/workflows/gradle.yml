name: Team5_BE Project CI/CD

on:
  push:
    branches: [ "Master" ]
  pull_request:
    branches: [ "Master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 전체 레포지토리 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ojosama-repo  # 상위 디렉토리 이름으로 체크아웃
    
      # 파이썬 프로젝트 체크아웃
      - name: Checkout Python project
        uses: actions/checkout@v4
        with:
          repository: anaconda77/recommend-algorithms
          path: ojosama-repo/recommend-algorithms
          token: ${{ secrets.RECOMMEND_ALGORITHMS_PAT }}
          
      # Spring Boot 빌드
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Create Spring Boot properties
        run: |
          mkdir -p ./ojosama-repo/Team5_BE/src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./spring-app/src/main/resources/application.properties
          echo "${{ secrets.APPLICATION_LOCAL_PROPERTIES }}" > ./spring-app/src/main/resources/application-local.properties
          
      - name: Build Spring Boot
        working-directory: ./ojosama-repo/Team5_BE
        run: |
          chmod +x gradlew
          ./gradlew clean build --exclude-task test
        
      # Docker 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # Docker Compose 빌드 및 푸시
      - name: Build and push Docker images
        working-directory: ./ojosama-repo
        run: |
          docker-compose build
          docker-compose push
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1
          
      # 배포 서버에 SSH로 접속하여 컨테이너 실행 (선택사항)
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /path/to/your/project
            docker-compose pull
            docker-compose up -d
