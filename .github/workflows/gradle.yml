name: Team5_BE Project CI/CD

on:
  push:
    branches: [ "Master" ]
  pull_request:
    branches: [ "Master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 전체 레포지토리 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ojosama_repo  # 상위 디렉토리 이름으로 체크아웃
      
      # Spring Boot 프로젝트 체크아웃
      - name: Checkout Spring boot Project
        uses: actions/checkout@v4
        with:
          path: ojosama_repo/Team5_BE

      # Team5_BE를 Master 브랜치와 동기화
      - name: Sync Team5_BE with Master
        working-directory: ./ojosama_repo/Team5_BE
        run: |
          echo "Current git status:"
          git status
          
          echo "\nCurrent branch and commit:"
          git branch -v
          
          echo "\nFetching all changes..."
          git fetch --all --prune
          
          echo "\nChecking remote branches:"
          git branch -r
          
          echo "\nChecking out and pulling Master..."
          git checkout Master
          git pull origin Master
          
          echo "\nFinal git status:"
          git status
          
          echo "\nLatest commits:"
          git log --oneline -n 5
          
          echo "\nFinal directory listing:"
          ls -la
          
      # 파이썬 프로젝트 체크아웃
      - name: Checkout Python project
        uses: actions/checkout@v4
        with:
          repository: anaconda77/recommend-algorithms
          path: ojosama_repo/recommend-algorithms
          token: ${{ secrets.RECOMMEND_ALGORITHMS_PAT }}
          
      # Python 프로젝트를 master 브랜치와 동기화
      - name: Sync Python project with main
        working-directory: ./ojosama_repo/recommend-algorithms
        run: |
          git fetch origin main
          git reset --hard origin/main
          
      # Spring Boot 빌드
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle
          
      - name: Create Spring Boot properties
        run: |
          mkdir -p ./ojosama_repo/Team5_BE/src/main/resources
          echo "${{ secrets.APPLICATION }}" > ./ojosama_repo/Team5_BE/src/main/resources/application.properties
          echo "${{ secrets.APPLICATION_LOCAL }}" > ./ojosama_repo/Team5_BE/src/main/resources/application-local.properties
          echo "${{ secrets.APPLICATION_OAUTH }}" > ./ojosama_repo/Team5_BE/src/main/resources/application-oauth.properties
          
      - name: Build Spring Boot
        working-directory: ./ojosama_repo/Team5_BE
        run: |
          chmod +x gradlew
          ./gradlew clean build --exclude-task test
        
      # Docker 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      # EC2 서버에 프로젝트 전송 및 배포
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 기존 컨테이너 중지
            cd ~/ojosama_repo
            sudo docker-compose down
            
            # 기존 프로젝트 디렉토리 정리
            rm -rf Team5_BE
            rm -rf recommend-algorithms

      # 프로젝트 파일 전송 (디버그 모드 활성화)
      - name: Transfer project files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "./Team5_BE,./recommend-algorithms"
          target: "~/ojosama_repo"
          strip_components: 1
          debug: true  # 디버그 모드 활성화

      # 서버에서 파일 수신 확인 및 컨테이너 재시작
      - name: Verify and restart
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/ojosama_repo
            echo "Server directory contents:"
            ls -la
            echo "\nTeam5_BE contents:"
            ls -la Team5_BE || echo "Team5_BE not found"
            echo "\nrecommend-algorithms contents:"
            ls -la recommend-algorithms || echo "recommend-algorithms not found"
            
            if [ -d "Team5_BE" ] && [ -d "recommend-algorithms" ]; then
              echo "Projects transferred successfully"
              sudo docker-compose up -d --force-recreate
              sudo docker-compose ps
            else
              echo "Project transfer failed"
              exit 1
            fi
